import { render, screen, fireEvent } from '@testing-library/react';
import SearchBar from './SearchBar';

describe('SearchBar', () => {
  test('–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–≤–æ–¥–∞ –∏ –ø–æ–∏—Å–∫–∞', () => {
    render(<SearchBar onSearch={() => {}} />);

    //–ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–µ
    const input = screen.getByPlaceholderText(/–≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞/i);
    expect(input).toBeInTheDocument();

    //–ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É
    const button = screen.getByRole('button', { name: /search/i });
    expect(button).toBeInTheDocument();
  });

  test('–æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –≤–≤–æ–¥–µ', () => {
    render(<SearchBar onSearch={() => {}} />);
    const input = screen.getByPlaceholderText(/–≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞/i);

    //  –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω –ø–æ—è–≤–∏–ª—Å—è
    fireEvent.change(input, { target: { value: 'Luke' } });
    expect(input).toHaveValue('Luke');
  });

  test('–≤—ã–∑—ã–≤–∞–µ—Ç onSearch —Å –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏', () => {
    const mockSearch = jest.fn();
    render(<SearchBar onSearch={mockSearch} />);
    const input = screen.getByPlaceholderText(/–≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞/i);
    const button = screen.getByRole('button', { name: /search/i });

    //  –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
    fireEvent.change(input, { target: { value: '  Leia  ' } });
    fireEvent.click(button);

    //  –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ onSearch –≤—ã–∑–≤–∞–Ω —Å –æ—á–∏—â–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
    expect(mockSearch).toHaveBeenCalledWith('Leia');
    expect(mockSearch).toHaveBeenCalledTimes(1);
  });

  test('shows initial value from props if provided', () => {
    render(<SearchBar onSearch={() => {}} initialValue="Yoda" />);
    const input = screen.getByPlaceholderText(/–≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞/i);

    // üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    expect(input).toHaveValue('Yoda');
  });
});
