import { useEffect, useState } from 'react';
import { useSearchParams } from 'react-router-dom';
import { useLocalStorage } from './hooks/useLocalStorage';

import SearchBar from './components/SearchBar';
import CardList from './components/CardList';
import Loader from './components/Loader';
import ErrorBoundary from './components/ErrorBoundary';
import BuggyComponent from './components/BuggyComponent';
import Pagination from './components/Pagination';
import { Navigation } from './components/Navigation';
import DetailsPanel from './components/DetailsPanel';

import type { SwapiPerson } from './types/swapi';
import { fetchSwapiPeople } from './utils/api';
import { extractId } from './utils/swapi_id';
const App = () => {
  //  –û—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –ø–æ–ª—É—á–∞–µ–º—ã—Ö –∏–∑ SWAPI API
  const [items, setItems] = useState<SwapiPerson[]>([]);

  //  –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü (—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–∑ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π)
  const [totalPages, setTotalPages] = useState(1);

  //  –û–±—â–µ–µ —á–∏—Å–ª–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø–æ —Ñ–∏–ª—å—Ç—Ä—É
  const [totalItems, setTotalItems] = useState(0);

  //  –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. useLocalStorage —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏
  const [searchTerm, setSearchTerm] = useLocalStorage('searchTerm', '');

  //  –°—Ç–∞—Ç—É—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–∫–∏
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  //  –¢–æ–≥–≥–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –æ—à–∏–±–∫–æ–π
  const [showBug, setShowBug] = useState(false);

  //  –ß—Ç–µ–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ?page=2&people=5)
  const [searchParams, setSearchParams] = useSearchParams();

  //  ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ ?people
  const selectedId = searchParams.get('people');

  //  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: —á–∏—Ç–∞–µ–º –∏–∑ URL –ª–∏–±–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1
  const pageFromUrl = Number(searchParams.get('page')) || 1;
  const [currentPage, setCurrentPage] = useState(pageFromUrl);

  //  –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è currentPage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
  useEffect(() => {
    const newPage = Number(searchParams.get('page')) || 1;
    if (newPage !== currentPage) setCurrentPage(newPage);
  }, [searchParams, currentPage]);

  //  –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    const fetchData = async () => {
      setLoading(true); // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
      setError(''); // –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é –æ—à–∏–±–∫—É
      setItems([]); // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ

      try {
        //  –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ SWAPI API
        const data = await fetchSwapiPeople({ searchTerm, page: currentPage });

        //  –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        setItems(data.results);
        setTotalItems(data.count);
        setTotalPages(Math.ceil(data.count / 10) || 1); // –¥–µ–ª–∏–º –Ω–∞ 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
      } catch (err) {
        //  –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ API
        const msg = err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
        setError(msg);
      } finally {
        setLoading(false); // —É–±–∏—Ä–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä
      }
    };

    fetchData(); //  –í—ã–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  }, [searchTerm, currentPage]);

  //  –ü—Ä–æ–≤–µ—Ä—è–µ–º: –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–∞—Ö ‚Äî —É–¥–∞–ª—è–µ–º –µ–≥–æ –∏–∑ URL
  useEffect(() => {
    if (selectedId) {
      const exists = items.some((p) => extractId(p.url) === selectedId);
      if (!exists) {
        searchParams.delete('people'); // —É–¥–∞–ª—è–µ–º ID
        setSearchParams(searchParams); // –æ–±–Ω–æ–≤–ª—è–µ–º URL
      }
    }
  }, [items, selectedId, searchParams, setSearchParams]);

  //  –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ –∏–º–µ–Ω–∏ –Ω–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
  const findPersonPage = async (
    term: string
  ): Promise<{ page: number; id: string } | null> => {
    const normalizedTerm = term.trim().toLowerCase();

    //  –ò—â–µ–º –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ 9 –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)
    for (let page = 1; page <= 9; page++) {
      const data = await fetchSwapiPeople({ searchTerm: term, page });

      //  –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤–æ–≥–æ —Å–æ–≤–ø–∞–≤—à–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–æ –∏–º–µ–Ω–∏
      const match = data.results.find((p) =>
        p.name.trim().toLowerCase().includes(normalizedTerm)
      );

      if (match) {
        const id = extractId(match.url); // –∏–∑–≤–ª–µ–∫–∞–µ–º ID –∏–∑ URL API
        return { page, id };
      }
    }

    return null; // ‚ùå –ù–µ –Ω–∞—à–ª–∏
  };

  //  –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤ –ø–æ–∏—Å–∫–µ
  const handleSearch = async (term: string) => {
    setSearchTerm(term); // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å

    const result = await findPersonPage(term);

    if (result) {
      //  –ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–∞–π–¥–µ–Ω ‚Äî –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ ID
      searchParams.set('page', String(result.page));
      searchParams.set('people', result.id);
    } else {
      //  –ù–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
      searchParams.set('page', '1');
      searchParams.delete('people');
    }

    setSearchParams(searchParams); // –ø—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
  };

  //  –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º (Pagination ‚Üí onPageChange)
  const handlePageChange = (page: number) => {
    searchParams.set('page', String(page)); // –º–µ–Ω—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    setSearchParams(searchParams); // –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    window.scrollTo({ top: 0, behavior: 'smooth' }); // –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö
  };

  //  –í—ã–±–æ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  const handleCardClick = (id: string) => {
    searchParams.set('people', id); // –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä people
    setSearchParams(searchParams); // –ø—Ä–∏–º–µ–Ω—è–µ–º –≤ URL
  };

  //  –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ ID (–¥–ª—è DetailsPanel)
  const selectedPerson = selectedId
    ? items.find((p) => extractId(p.url) === selectedId)
    : null;

  // üí£ –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ –±–∞–≥–Ω—É—Ç–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const triggerBug = () => setShowBug(true);

  return (
    //  –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ ErrorBoundary ‚Äî –¥–ª—è –æ—Ç–ª–æ–≤–∞ –æ—à–∏–±–æ–∫
    <ErrorBoundary
      fallback={
        <div
          style={{
            padding: '1rem',
            color: 'red',
            textAlign: 'center',
            border: '1px solid green',
            margin: '1rem',
          }}
        >
          <h2>–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>
          <p>–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–∞–ª —Å–±–æ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.</p>
        </div>
      }
    >
      <div className="app-container" style={{ padding: '1rem' }}>
        <h1>SWAPI –ü–æ–∏—Å–∫</h1>

        {/*  –ë–ª–æ–∫ –ø–æ–∏—Å–∫–∞ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
        <header className="search-section" style={{ marginBottom: '1rem' }}>
          <SearchBar onSearch={handleSearch} initialValue={searchTerm} />
          <Navigation />
        </header>

        {/* ‚öô –û—Å–Ω–æ–≤–Ω–∞—è –∑–æ–Ω–∞: —Å–ø–∏—Å–æ–∫ + –ø–∞–Ω–µ–ª—å –¥–µ—Ç–∞–ª–µ–π */}
        <div style={{ display: 'flex', gap: '1rem' }}>
          <main className="results-section">
            {/*  –ó–∞–≥—Ä—É–∑–∫–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ */}
            {loading && <Loader />}
            {error && <div style={{ color: 'red' }}>{error}</div>}

            {/* üßæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—è */}
            {!loading && !error && (
              <>
                <CardList
                  items={items}
                  onCardClick={handleCardClick}
                  currentPage={currentPage}
                />

                {totalPages > 1 && (
                  <Pagination
                    currentPage={currentPage}
                    totalPages={totalPages}
                    onPageChange={handlePageChange}
                  />
                )}

                <div className="cards_found">
                  –ù–∞–π–¥–µ–Ω–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π: {totalItems}
                </div>
              </>
            )}

            {/* üí£ –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ */}
            <button onClick={triggerBug}>Render BuggyComponent</button>
            {showBug && <BuggyComponent />}
          </main>

          {/*  –ü–∞–Ω–µ–ª—å –¥–µ—Ç–∞–ª–µ–π –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */}
          {selectedPerson && (
            <DetailsPanel
              person={selectedPerson}
              onClose={() => {
                searchParams.delete('people'); // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
                setSearchParams(searchParams); // –æ–±–Ω–æ–≤–ª—è–µ–º URL
              }}
            />
          )}
        </div>
      </div>
    </ErrorBoundary>
  );
};

export default App;
